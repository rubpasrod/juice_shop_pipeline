name: Juice Shop Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build image
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Image
        run: docker build -t juice-shop .

  test:
    name: Test
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: ðŸ“¥ Checkout code
        uses: actions/checkout@v4

      - name: ðŸ”§ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: ðŸ“¦ Install dependencies
        run: npm install --legacy-peer-deps

      - name: ðŸ”§ Install Angular CLI
        run: npm install -g @angular/cli

      - name: ðŸ”§ Install angular-highlight-js
        run: npm install angular-highlight-js --save

      - name: ðŸš€ Run Unit & Integration Tests
        run: npm test

  security_sast:
    name: SAST (Semgrep)
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Semgrep (SAST)
        run: |
          docker run --rm -v $(pwd):/src returntocorp/semgrep semgrep --config=p/ci --json -o semgrep-results.json
      - name: Check for Critical Vulnerabilities (Semgrep)
        run: |
          if grep -q '"severity": "ERROR"' semgrep-results.json; then
            echo "Critical vulnerabilities found by Semgrep!"
            exit 1
          fi

  security_sca:
    name: SCA (OWASP Dependency-Check)
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Report Directory for SCA
        run: mkdir -p ./dependency-check-report

      - name: Run OWASP Dependency-Check (SCA)
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: |
          docker run --rm -v $(pwd):/src \
          -e NVD_API_KEY=${{ secrets.NVD_API_KEY }} \
          owasp/dependency-check:latest \
          --project "Juice Shop" \
          --scan /src \
          --format "ALL" \
          --out /src/dependency-check-report \
          --nvdApiKey "${{ secrets.NVD_API_KEY }}"
      - name: Check for Critical Vulnerabilities (OWASP Dependency-Check)
        run: |
          if grep -q '"severity": "CRITICAL"' dependency-check-report/dependency-check-report.json; then
            echo "Critical vulnerabilities found by OWASP Dependency-Check!"
            exit 1
          fi

  security_dast:
    name: DAST (OWASP ZAP)
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: ðŸ“¦ Install dependencies
        run: npm install --legacy-peer-deps

      - name: ðŸ”§ Start Juice Shop
        run: |
          nohup npm start &  # Start the server in the background
          sleep 60           # Wait 10 seconds to ensure the server is running

      - name: Run OWASP ZAP Scan (DAST)
        run: |
          docker run --rm -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-weekly zap-baseline.py -t http://localhost:3000 -g gen.conf -r zap-report.html

  security_secrets:
    name: Secrets Scan (TruffleHog)
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run TruffleHog Scan
        run: |
          docker run --rm -v $(pwd):/src trufflesecurity/trufflehog:latest \
          git file:///src --json > trufflehog-results.json
      - name: Check for Secrets
        run: |
          if grep -q '"reason":' trufflehog-results.json; then
            echo "Secrets found by TruffleHog!"
            exit 1
          fi
