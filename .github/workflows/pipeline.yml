name: Juice Shop Pipeline

on:
   push:
     branches:
       - main
   pull_request:
     branches:
       - main

jobs:

  build:
    name: Build image
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]') && steps.changes.outputs.build == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for relevant changes
        id: changes
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E 'Dockerfile|src/*'; then
            echo "build=true" >> $GITHUB_ENV
          fi

      - name: Build Image
        run: docker build -t juice-shop .

  test:
    name: Test
    runs-on: ubuntu-24.04
    needs: build
    if: ${{ env.build == 'true' }}
    steps:
      - name: ðŸ“¥ Checkout code
        uses: actions/checkout@v4

      - name: ðŸ”§ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: ðŸ“¦ Install dependencies
        run: npm install --legacy-peer-deps

      - name: ðŸ”§ Install Angular CLI
        run: npm install -g @angular/cli

      - name: ðŸ”§ Install angular-highlight-js
        run: npm install angular-highlight-js --save

      - name: ðŸš€ Run Unit & Integration Tests
        run: npm test

  security:
    name: Security Analysis
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Semgrep (SAST)
        run: |
          docker run --rm -v $(pwd):/src returntocorp/semgrep semgrep --config=p/ci --json -o semgrep-results.json

      - name: Check for Critical Vulnerabilities (Semgrep)
        run: |
          if grep -q '"severity": "ERROR"' semgrep-results.json; then
            echo "Critical vulnerabilities found by Semgrep!"
            exit 1
          fi

      - name: Create Report Directory for SCA
        run: mkdir -p ./dependency-check-report

      - name: Run OWASP Dependency-Check (SCA)
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: |
          docker run --rm -v $(pwd):/src owasp/dependency-check:latest \
          --project "Juice Shop" --scan /src --format "ALL" --out /src/dependency-check-report

      - name: Check for Critical Vulnerabilities (OWASP Dependency-Check)
        run: |
          if grep -q '"severity": "CRITICAL"' dependency-check-report/dependency-check-report.json; then
            echo "Critical vulnerabilities found by OWASP Dependency-Check!"
            exit 1
          fi

