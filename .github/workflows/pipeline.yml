name: Juice Shop Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build image
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Image
        run: docker build -t juice-shop .

  test:
    name: Test
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install dependencies
        run: npm install --legacy-peer-deps

      - name: 🔧 Install Angular CLI
        run: npm install -g @angular/cli

      - name: 🔧 Install angular-highlight-js
        run: npm install angular-highlight-js --save

      - name: 🚀 Run Unit & Integration Tests
        run: npm test

  security_sast:
    name: SAST (Semgrep)
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Semgrep (SAST)
        run: |
          docker run --rm -v $(pwd):/src returntocorp/semgrep semgrep --config=p/ci --json -o semgrep-results.json
      - name: Check for Critical Vulnerabilities (Semgrep)
        run: |
          if grep -q '"severity": "ERROR"' semgrep-results.json; then
            echo "Critical vulnerabilities found by Semgrep!"
            exit 1
          fi

  sca:
    name: SCA Stage (OWASP Dependency-Check)
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js dependencies
        run: npm install --package-lock

      - name: Cache Dependency-Check database
        uses: actions/cache@v3
        with:
          path: /tmp/dependency-check-cache
          key: dependency-check-db-${{ runner.os }}-${{ hashFiles('**/*.js') }}

      - name: Run OWASP Dependency-Check
        run: |
          mkdir -p ./dependency-check-report
          docker run --rm \
            -v $(pwd):/src \
            -v /tmp/dependency-check-cache:/root/.m2/repository \
            owasp/dependency-check:latest \
            --project "Juice Shop" \
            --scan /src \
            --out /src/dependency-check-report \
            --exclude /src/test/files/passwordProtected.zip \
            --exclude /src/test/files/arbitraryFileWrite.zip

      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: ./dependency-check-report

  security_dast:
    name: DAST (OWASP ZAP)
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 📦 Install dependencies
        run: npm install --legacy-peer-deps

      - name: 🔧 Start Juice Shop
        run: |
          nohup npm start &
          sleep 60  # Esperar más tiempo para asegurar que la app está activa

      - name: 🔍 Check if Juice Shop is running
        run: |
          curl --retry 5 --retry-delay 10 --retry-connrefused -I http://localhost:3000

      - name: Run OWASP ZAP Scan (DAST)
        run: |
          docker ps
          docker pull zaproxy/zap-weekly
          docker run --rm -v $(pwd):/zap/wrk/:rw --network="host" -t zaproxy/zap-weekly zap-baseline.py -t http://localhost:3000 -g gen.conf -r zap-report.html

  security_secrets:
    name: Secrets Scan (TruffleHog)
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run TruffleHog Scan
        run: |
          docker run --rm -v $(pwd):/src trufflesecurity/trufflehog:latest \
          git file:///src --json > trufflehog-results.json
      - name: Check for Secrets
        run: |
          if grep -q '"reason":' trufflehog-results.json; then
            echo "Secrets found by TruffleHog!"
            exit 1
          fi
